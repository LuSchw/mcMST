% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/emoa_BG.R
\name{emoaMST_BG}
\alias{emoaMST_BG}
\title{Subgraph EMOA for the multi-criteria MST problem.}
\usage{
emoaMST_BG(instance, n.objectives = 2L, mu, lambda = mu, mut = NULL,
  selMating = ecr::selSimple, selSurvival = ecr::selNondom, ref.point,
  max.iter = 100L)
}
\arguments{
\item{instance}{[\code{any}]\cr
Multi-objective graph problem.}

\item{n.objectives}{[\code{integer(1)}]\cr
Number of objectives.}

\item{mu}{[\code{integer(1)}]\cr
Population size.}

\item{lambda}{[\code{integer(1)}]\cr
Number of offspring generated in each generation.
Default is \code{mu}.}

\item{mut}{[\code{ecr_mutator}]\cr
Mutation operator.
Default is \code{\link{mutSubgraphMST}}.}

\item{selMating}{[\code{ecr_selector}]\cr
Mating selector.
Default is \code{\link[ecr]{selSimple}}.}

\item{selSurvival}{[\code{ecr_selector}]\cr
Survival selector.
Default is \code{link[ecr]{selNondom}}.}

\item{ref.point}{[\code{numeric(n.objectives)}]\cr
Reference point for Hypervolume computation.}

\item{max.iter}{[\code{integer(1)}]\cr
Maximal number of iterations.
Default is \code{100}.}
}
\value{
[\code{\link[ecr]{ecr_result}}]
}
\description{
Evolutionary multi-objective algorithm to solve the
multi-objective minimum spanning tree problem. The algorithm relies
to mutation only to generate offspring employing the subgraph mutator
(see \code{\link{mutSubgraphMST}}).
}
\note{
This algorithm performs minimization in all objectives.
}
\examples{
inst = genRandomMCGP(10)
res = emoaMST_BG(inst, mu = 20L, ref.point = c(1e5, 1e5), max.iter = 100L)
print(res$pareto.front)
print(tail(getStatistics(res$log)))
}
\seealso{
Other mcMST EMOAs: \code{\link{emoaMST_Zhou}}
}
